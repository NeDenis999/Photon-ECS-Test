//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity multiplayerEntity { get { return GetGroup(MetaMatcher.Multiplayer).GetSingleEntity(); } }
    public Multiplayer multiplayer { get { return multiplayerEntity.multiplayer; } }
    public bool hasMultiplayer { get { return multiplayerEntity != null; } }

    public MetaEntity SetMultiplayer(Code.IMultiplayerService newValue) {
        if (hasMultiplayer) {
            throw new Entitas.EntitasException("Could not set Multiplayer!\n" + this + " already has an entity with Multiplayer!",
                "You should check if the context already has a multiplayerEntity before setting it or use context.ReplaceMultiplayer().");
        }
        var entity = CreateEntity();
        entity.AddMultiplayer(newValue);
        return entity;
    }

    public void ReplaceMultiplayer(Code.IMultiplayerService newValue) {
        var entity = multiplayerEntity;
        if (entity == null) {
            entity = SetMultiplayer(newValue);
        } else {
            entity.ReplaceMultiplayer(newValue);
        }
    }

    public void RemoveMultiplayer() {
        multiplayerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Multiplayer multiplayer { get { return (Multiplayer)GetComponent(MetaComponentsLookup.Multiplayer); } }
    public bool hasMultiplayer { get { return HasComponent(MetaComponentsLookup.Multiplayer); } }

    public void AddMultiplayer(Code.IMultiplayerService newValue) {
        var index = MetaComponentsLookup.Multiplayer;
        var component = (Multiplayer)CreateComponent(index, typeof(Multiplayer));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMultiplayer(Code.IMultiplayerService newValue) {
        var index = MetaComponentsLookup.Multiplayer;
        var component = (Multiplayer)CreateComponent(index, typeof(Multiplayer));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMultiplayer() {
        RemoveComponent(MetaComponentsLookup.Multiplayer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherMultiplayer;

    public static Entitas.IMatcher<MetaEntity> Multiplayer {
        get {
            if (_matcherMultiplayer == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.Multiplayer);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherMultiplayer = matcher;
            }

            return _matcherMultiplayer;
        }
    }
}
